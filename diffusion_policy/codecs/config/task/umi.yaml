#整个文件问数据集的配置文件
name: umi

#这里定义的所有的超参数，后面的使用${task.img_obs_horizon}进行值的获取，img_obs_horizon为配置文件的字段,task.img_obs_horizon可引用
camera_obs_latency: 0.125
robot_obs_latency: 0.0001
gripper_obs_latency: 0.02
dataset_frequeny: 0 #59.94
obs_down_sample_steps: 3 # 3, 1

low_dim_obs_horizon: 2
img_obs_horizon: 2
action_horizon: 16
ignore_proprioception: False

shape_meta: &shape_meta #是一个锚点定义
  # acceptable types: rgb, low_dim
  obs: #图像，XYZ，Rotation，夹爪宽
    camera0_rgb: #RGB图像
      shape: [3, 224, 224]
      horizon: ${task.img_obs_horizon} # int 在这个例子中，${task.img_obs_horizon} 会被替换为 task 字段中的 img_obs_horizon 的值，即 2。
      latency_steps: 0 # float
      down_sample_steps: ${task.obs_down_sample_steps} # int
      type: rgb
      ignore_by_policy: False
    robot0_eef_pos: #末端位姿xyz
      shape: [3]
      horizon: ${task.low_dim_obs_horizon} # int
      latency_steps: ${eval:'(${task.camera_obs_latency} - ${task.robot_obs_latency}) * ${task.dataset_frequeny}'} # float
      down_sample_steps: ${task.obs_down_sample_steps} # float
      type: low_dim
      ignore_by_policy: ${task.ignore_proprioception}
    # robot0_eef_pos_abs: #机器人末端执行器的绝对位置，特别是沿 z 轴的值
    #   shape: [1]
    #   axis: [2] # 2 means z-axis
    #   horizon: ${task.low_dim_obs_horizon} # int
    #   latency_steps: ${eval:'(${task.camera_obs_latency} - ${task.robot_obs_latency}) * ${task.dataset_frequeny}'} # float
    #   down_sample_steps: ${task.obs_down_sample_steps} # float
    #   type: low_dim
    # robot0_eef_rot_axis_angle_abs: #描述的是机器人末端执行器的旋转角度，特别是绕 x 轴（偏航角）和 y 轴（俯仰角）的值。
    #   shape: [2]
    #   axis: [0, 1] # yaw and pitch
    #   horizon: ${task.low_dim_obs_horizon} # int
    #   latency_steps: ${eval:'(${task.camera_obs_latency} - ${task.robot_obs_latency}) * ${task.dataset_frequeny}'} # float
    #   down_sample_steps: ${task.obs_down_sample_steps} # float
    #   type: low_dim
    robot0_eef_rot_axis_angle: #末端旋转轴角度
      raw_shape: [3]
      shape: [6]
      horizon: ${task.low_dim_obs_horizon} # int
      latency_steps: ${eval:'(${task.camera_obs_latency} - ${task.robot_obs_latency}) * ${task.dataset_frequeny}'} # float
      down_sample_steps: ${task.obs_down_sample_steps} # float
      type: low_dim
      rotation_rep: rotation_6d
      ignore_by_policy: ${task.ignore_proprioception}
    robot0_gripper_width: #夹爪宽度
      shape: [1]
      horizon: ${task.low_dim_obs_horizon} # int
      latency_steps: ${eval:'(${task.camera_obs_latency} - ${task.gripper_obs_latency}) * ${task.dataset_frequeny}'} # float
      down_sample_steps: ${task.obs_down_sample_steps} # float
      type: low_dim
      ignore_by_policy: ${task.ignore_proprioception}

    # pose with respect to episode start
    # robot0_eef_pos_wrt_start:
    #   shape: [3]
    #   horizon: ${task.low_dim_obs_horizon} # int
    #   latency_steps: ${eval:'(${task.camera_obs_latency} - ${task.robot_obs_latency}) * ${task.dataset_frequeny}'} # float
    #   down_sample_steps: ${task.obs_down_sample_steps} # float
    #   type: low_dim
    #   ignore_by_policy: ${task.ignore_proprioception}
    robot0_eef_rot_axis_angle_wrt_start:
      raw_shape: [3]
      shape: [6]
      horizon: ${task.low_dim_obs_horizon} # int
      latency_steps: ${eval:'(${task.camera_obs_latency} - ${task.robot_obs_latency}) * ${task.dataset_frequeny}'} # float
      down_sample_steps: ${task.obs_down_sample_steps} # float
      type: low_dim
      ignore_by_policy: ${task.ignore_proprioception}
  action: 
    shape: [10]
    horizon: ${task.action_horizon}
    latency_steps: 0 # float
    down_sample_steps: ${task.obs_down_sample_steps} # int
    rotation_rep: rotation_6d

task_name: &task_name umi
dataset_path: example_demo_session/dataset.zarr.zip
pose_repr: &pose_repr
  obs_pose_repr: relative # abs or rel
  action_pose_repr: relative # abs or rel or delta

env_runner:
  _target_: diffusion_policy.env_runner.real_pusht_image_runner.RealPushTImageRunner

dataset: #数据集配置，直接就是实例化一个dataset
  _target_: diffusion_policy.dataset.umi_dataset.UmiDataset
  shape_meta: *shape_meta #使用 *shape_meta 引用上述定义：
  dataset_path: ${task.dataset_path} #由命令行输入
  cache_dir: null
  pose_repr: *pose_repr
  action_padding: False
  temporally_independent_normalization: False
  repeat_frame_prob: 0.0
  max_duration: null
  seed: 42
  val_ratio: 0.05
